{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "postgres": {
      "type": "container.v0",
      "connectionString": "Host={postgres.bindings.tcp.host};Port={postgres.bindings.tcp.port};Username=postgres;Password={postgres-password.value}",
      "image": "docker.io/library/postgres:17.2",
      "volumes": [
        {
          "name": "endearing.app.host-3379c55731-postgres-data",
          "target": "/var/lib/postgresql/data",
          "readOnly": false
        }
      ],
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "{postgres-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5432
        }
      }
    },
    "postgresdb": {
      "type": "value.v0",
      "connectionString": "{postgres.connectionString};Database=postgresdb"
    },
    "prometheus": {
      "type": "container.v0",
      "image": "prom/prometheus:v3.2.1",
      "args": [
        "--web.enable-otlp-receiver",
        "--config.file=/etc/prometheus/prometheus.yml"
      ],
      "bindMounts": [
        {
          "source": "../TelemetryStuff/prometheus",
          "target": "/etc/prometheus",
          "readOnly": true
        }
      ],
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 9090
        }
      }
    },
    "loki": {
      "type": "container.v0",
      "image": "grafana/loki:3.0.0",
      "args": [
        "-config.file=/etc/loki/loki-config.yaml"
      ],
      "bindMounts": [
        {
          "source": "../TelemetryStuff/loki",
          "target": "/etc/loki",
          "readOnly": true
        }
      ],
      "volumes": [
        {
          "target": "/loki",
          "readOnly": false
        }
      ],
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 3100
        }
      }
    },
    "grafana": {
      "type": "container.v0",
      "image": "grafana/grafana:latest",
      "bindMounts": [
        {
          "source": "../TelemetryStuff/grafana/config",
          "target": "/etc/grafana",
          "readOnly": true
        },
        {
          "source": "../TelemetryStuff/grafana/dashboards",
          "target": "/var/lib/grafana/dashboards",
          "readOnly": true
        }
      ],
      "env": {
        "PROMETHEUS_ENDPOINT": "{prometheus.bindings.http.url}",
        "LOKI_ENDPOINT": "{loki.bindings.http.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 3000
        }
      }
    },
    "otelcollector": {
      "type": "container.v0",
      "image": "ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.123.0",
      "bindMounts": [
        {
          "source": "../TelemetryStuff/otelcollector/config.yaml",
          "target": "/etc/otelcol-contrib/config.yaml",
          "readOnly": false
        }
      ],
      "env": {
        "ASPIRE_ENDPOINT": "http://localhost:18889",
        "ASPIRE_API_KEY": "3e539821e26d594ec39250992392074f",
        "ASPIRE_INSECURE": "true",
        "PROMETHEUS_ENDPOINT": "{prometheus.bindings.http.url}/api/v1/otlp",
        "LOKI_ENDPOINT": "{loki.bindings.http.url}"
      },
      "bindings": {
        "grpc": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 4317
        },
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 4318
        }
      }
    },
    "back": {
      "type": "project.v0",
      "path": "../EndearingApp.Web/EndearingApp.Web.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{back.bindings.http.targetPort}",
        "ConnectionStrings__postgresdb": "{postgresdb.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "front": {
      "type": "container.v1",
      "build": {
        "context": "../EndearingApp.AdminFrontend",
        "dockerfile": "../EndearingApp.AdminFrontend/Dockerfile"
      },
      "env": {
        "NODE_ENV": "development",
        "VITE_API_URL": "{back.bindings.http.url}",
        "services__back__http__0": "{back.bindings.http.url}",
        "services__back__https__0": "{back.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 5173,
          "external": true
        }
      }
    },
    "postgres-password": {
      "type": "parameter.v0",
      "value": "{postgres-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    }
  }
}