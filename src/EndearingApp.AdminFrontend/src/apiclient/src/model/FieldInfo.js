/*
 * EndearingApp.Web
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import CustomAttributeData from './CustomAttributeData';
import FieldAttributes from './FieldAttributes';
import MemberTypes from './MemberTypes';
import Module from './Module';
import RuntimeFieldHandle from './RuntimeFieldHandle';
import Type from './Type';

/**
 * The FieldInfo model module.
 * @module model/FieldInfo
 * @version 1.0
 */
export default class FieldInfo {
  /**
   * Constructs a new <code>FieldInfo</code>.
   * @alias module:model/FieldInfo
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>FieldInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FieldInfo} obj Optional instance to populate.
   * @return {module:model/FieldInfo} The populated <code>FieldInfo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FieldInfo();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('declaringType'))
        obj.declaringType = Type.constructFromObject(data['declaringType']);
      if (data.hasOwnProperty('reflectedType'))
        obj.reflectedType = Type.constructFromObject(data['reflectedType']);
      if (data.hasOwnProperty('module'))
        obj.module = Module.constructFromObject(data['module']);
      if (data.hasOwnProperty('customAttributes'))
        obj.customAttributes = ApiClient.convertToType(data['customAttributes'], [CustomAttributeData]);
      if (data.hasOwnProperty('isCollectible'))
        obj.isCollectible = ApiClient.convertToType(data['isCollectible'], 'Boolean');
      if (data.hasOwnProperty('metadataToken'))
        obj.metadataToken = ApiClient.convertToType(data['metadataToken'], 'Number');
      if (data.hasOwnProperty('memberType'))
        obj.memberType = MemberTypes.constructFromObject(data['memberType']);
      if (data.hasOwnProperty('attributes'))
        obj.attributes = FieldAttributes.constructFromObject(data['attributes']);
      if (data.hasOwnProperty('fieldType'))
        obj.fieldType = Type.constructFromObject(data['fieldType']);
      if (data.hasOwnProperty('isInitOnly'))
        obj.isInitOnly = ApiClient.convertToType(data['isInitOnly'], 'Boolean');
      if (data.hasOwnProperty('isLiteral'))
        obj.isLiteral = ApiClient.convertToType(data['isLiteral'], 'Boolean');
      if (data.hasOwnProperty('isNotSerialized'))
        obj.isNotSerialized = ApiClient.convertToType(data['isNotSerialized'], 'Boolean');
      if (data.hasOwnProperty('isPinvokeImpl'))
        obj.isPinvokeImpl = ApiClient.convertToType(data['isPinvokeImpl'], 'Boolean');
      if (data.hasOwnProperty('isSpecialName'))
        obj.isSpecialName = ApiClient.convertToType(data['isSpecialName'], 'Boolean');
      if (data.hasOwnProperty('isStatic'))
        obj.isStatic = ApiClient.convertToType(data['isStatic'], 'Boolean');
      if (data.hasOwnProperty('isAssembly'))
        obj.isAssembly = ApiClient.convertToType(data['isAssembly'], 'Boolean');
      if (data.hasOwnProperty('isFamily'))
        obj.isFamily = ApiClient.convertToType(data['isFamily'], 'Boolean');
      if (data.hasOwnProperty('isFamilyAndAssembly'))
        obj.isFamilyAndAssembly = ApiClient.convertToType(data['isFamilyAndAssembly'], 'Boolean');
      if (data.hasOwnProperty('isFamilyOrAssembly'))
        obj.isFamilyOrAssembly = ApiClient.convertToType(data['isFamilyOrAssembly'], 'Boolean');
      if (data.hasOwnProperty('isPrivate'))
        obj.isPrivate = ApiClient.convertToType(data['isPrivate'], 'Boolean');
      if (data.hasOwnProperty('isPublic'))
        obj.isPublic = ApiClient.convertToType(data['isPublic'], 'Boolean');
      if (data.hasOwnProperty('isSecurityCritical'))
        obj.isSecurityCritical = ApiClient.convertToType(data['isSecurityCritical'], 'Boolean');
      if (data.hasOwnProperty('isSecuritySafeCritical'))
        obj.isSecuritySafeCritical = ApiClient.convertToType(data['isSecuritySafeCritical'], 'Boolean');
      if (data.hasOwnProperty('isSecurityTransparent'))
        obj.isSecurityTransparent = ApiClient.convertToType(data['isSecurityTransparent'], 'Boolean');
      if (data.hasOwnProperty('fieldHandle'))
        obj.fieldHandle = RuntimeFieldHandle.constructFromObject(data['fieldHandle']);
    }
    return obj;
  }
}

/**
 * @member {String} name
 */
FieldInfo.prototype.name = undefined;

/**
 * @member {module:model/Type} declaringType
 */
FieldInfo.prototype.declaringType = undefined;

/**
 * @member {module:model/Type} reflectedType
 */
FieldInfo.prototype.reflectedType = undefined;

/**
 * @member {module:model/Module} module
 */
FieldInfo.prototype.module = undefined;

/**
 * @member {Array.<module:model/CustomAttributeData>} customAttributes
 */
FieldInfo.prototype.customAttributes = undefined;

/**
 * @member {Boolean} isCollectible
 */
FieldInfo.prototype.isCollectible = undefined;

/**
 * @member {Number} metadataToken
 */
FieldInfo.prototype.metadataToken = undefined;

/**
 * @member {module:model/MemberTypes} memberType
 */
FieldInfo.prototype.memberType = undefined;

/**
 * @member {module:model/FieldAttributes} attributes
 */
FieldInfo.prototype.attributes = undefined;

/**
 * @member {module:model/Type} fieldType
 */
FieldInfo.prototype.fieldType = undefined;

/**
 * @member {Boolean} isInitOnly
 */
FieldInfo.prototype.isInitOnly = undefined;

/**
 * @member {Boolean} isLiteral
 */
FieldInfo.prototype.isLiteral = undefined;

/**
 * @member {Boolean} isNotSerialized
 */
FieldInfo.prototype.isNotSerialized = undefined;

/**
 * @member {Boolean} isPinvokeImpl
 */
FieldInfo.prototype.isPinvokeImpl = undefined;

/**
 * @member {Boolean} isSpecialName
 */
FieldInfo.prototype.isSpecialName = undefined;

/**
 * @member {Boolean} isStatic
 */
FieldInfo.prototype.isStatic = undefined;

/**
 * @member {Boolean} isAssembly
 */
FieldInfo.prototype.isAssembly = undefined;

/**
 * @member {Boolean} isFamily
 */
FieldInfo.prototype.isFamily = undefined;

/**
 * @member {Boolean} isFamilyAndAssembly
 */
FieldInfo.prototype.isFamilyAndAssembly = undefined;

/**
 * @member {Boolean} isFamilyOrAssembly
 */
FieldInfo.prototype.isFamilyOrAssembly = undefined;

/**
 * @member {Boolean} isPrivate
 */
FieldInfo.prototype.isPrivate = undefined;

/**
 * @member {Boolean} isPublic
 */
FieldInfo.prototype.isPublic = undefined;

/**
 * @member {Boolean} isSecurityCritical
 */
FieldInfo.prototype.isSecurityCritical = undefined;

/**
 * @member {Boolean} isSecuritySafeCritical
 */
FieldInfo.prototype.isSecuritySafeCritical = undefined;

/**
 * @member {Boolean} isSecurityTransparent
 */
FieldInfo.prototype.isSecurityTransparent = undefined;

/**
 * @member {module:model/RuntimeFieldHandle} fieldHandle
 */
FieldInfo.prototype.fieldHandle = undefined;

