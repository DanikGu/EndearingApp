/*
 * EndearingApp.Web
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import IEdmDirectValueAnnotationsManager from './IEdmDirectValueAnnotationsManager';
import IEdmEntityContainer from './IEdmEntityContainer';
import IEdmSchemaElement from './IEdmSchemaElement';
import IEdmVocabularyAnnotation from './IEdmVocabularyAnnotation';

/**
 * The IEdmModel model module.
 * @module model/IEdmModel
 * @version 1.0
 */
export default class IEdmModel {
  /**
   * Constructs a new <code>IEdmModel</code>.
   * @alias module:model/IEdmModel
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IEdmModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IEdmModel} obj Optional instance to populate.
   * @return {module:model/IEdmModel} The populated <code>IEdmModel</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IEdmModel();
      if (data.hasOwnProperty('schemaElements'))
        obj.schemaElements = ApiClient.convertToType(data['schemaElements'], [IEdmSchemaElement]);
      if (data.hasOwnProperty('vocabularyAnnotations'))
        obj.vocabularyAnnotations = ApiClient.convertToType(data['vocabularyAnnotations'], [IEdmVocabularyAnnotation]);
      if (data.hasOwnProperty('referencedModels'))
        obj.referencedModels = ApiClient.convertToType(data['referencedModels'], [IEdmModel]);
      if (data.hasOwnProperty('declaredNamespaces'))
        obj.declaredNamespaces = ApiClient.convertToType(data['declaredNamespaces'], ['String']);
      if (data.hasOwnProperty('directValueAnnotationsManager'))
        obj.directValueAnnotationsManager = IEdmDirectValueAnnotationsManager.constructFromObject(data['directValueAnnotationsManager']);
      if (data.hasOwnProperty('entityContainer'))
        obj.entityContainer = IEdmEntityContainer.constructFromObject(data['entityContainer']);
    }
    return obj;
  }
}

/**
 * @member {Array.<module:model/IEdmSchemaElement>} schemaElements
 */
IEdmModel.prototype.schemaElements = undefined;

/**
 * @member {Array.<module:model/IEdmVocabularyAnnotation>} vocabularyAnnotations
 */
IEdmModel.prototype.vocabularyAnnotations = undefined;

/**
 * @member {Array.<module:model/IEdmModel>} referencedModels
 */
IEdmModel.prototype.referencedModels = undefined;

/**
 * @member {Array.<String>} declaredNamespaces
 */
IEdmModel.prototype.declaredNamespaces = undefined;

/**
 * @member {module:model/IEdmDirectValueAnnotationsManager} directValueAnnotationsManager
 */
IEdmModel.prototype.directValueAnnotationsManager = undefined;

/**
 * @member {module:model/IEdmEntityContainer} entityContainer
 */
IEdmModel.prototype.entityContainer = undefined;

