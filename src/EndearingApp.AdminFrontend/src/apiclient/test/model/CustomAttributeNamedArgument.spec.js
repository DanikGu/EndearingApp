/*
 * EndearingApp.Web
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.64-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EndearingAppweb);
  }
}(this, function(expect, EndearingAppweb) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CustomAttributeNamedArgument', function() {
      beforeEach(function() {
        instance = new EndearingAppweb.CustomAttributeNamedArgument();
      });

      it('should create an instance of CustomAttributeNamedArgument', function() {
        // TODO: update the code to test CustomAttributeNamedArgument
        expect(instance).to.be.a(EndearingAppweb.CustomAttributeNamedArgument);
      });

      it('should have the property memberInfo (base name: "memberInfo")', function() {
        // TODO: update the code to test the property memberInfo
        expect(instance).to.have.property('memberInfo');
        // expect(instance.memberInfo).to.be(expectedValueLiteral);
      });

      it('should have the property typedValue (base name: "typedValue")', function() {
        // TODO: update the code to test the property typedValue
        expect(instance).to.have.property('typedValue');
        // expect(instance.typedValue).to.be(expectedValueLiteral);
      });

      it('should have the property memberName (base name: "memberName")', function() {
        // TODO: update the code to test the property memberName
        expect(instance).to.have.property('memberName');
        // expect(instance.memberName).to.be(expectedValueLiteral);
      });

      it('should have the property isField (base name: "isField")', function() {
        // TODO: update the code to test the property isField
        expect(instance).to.have.property('isField');
        // expect(instance.isField).to.be(expectedValueLiteral);
      });

    });
  });

}));
